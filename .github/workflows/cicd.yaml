name: CI-CD

on: push

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' 

      - name: Install Packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Configure DVC Remote
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_ACCESS_KEY }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DAGSHUB_SECRET_KEY }}

      - name: Fetch Data from DagsHub
        run: dvc pull
      
      - name: Run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro

      - name: Test Model Registry
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: pytest tests/test_model_registry.py

      - name: Test Model Performance
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: pytest tests/test_model_perf.py

      - name: Promote Model
        if: success()
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: python scripts/promote_model_to_prod.py
  
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/capstone-3:latest .

      - name: Push Docker image to Docker Hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/capstone-3:latest

      # - name: Deploy to Render
      #   if: success()  # Runs only if all previous steps succeed
      #   env:
      #     RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}  # Retrieves the Render Deploy Hook URL from GitHub Secrets
      #   run: |
      #     if [[ -z "$RENDER_DEPLOY_HOOK" ]]; then
      #       echo "Render Deploy Hook is missing!"  # Logs an error if the hook is not set
      #       exit 1  # Exits the workflow to prevent an invalid request
      #     fi
      #     curl -X POST "$RENDER_DEPLOY_HOOK"  # Sends a POST request to trigger deployment

  